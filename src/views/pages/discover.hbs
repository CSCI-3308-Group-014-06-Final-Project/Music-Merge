<!DOCTYPE html>
<html lang="en">

<body>

  <h1>Merge Playlists Page</h1>
  <form id="playlistsForm">
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Image</th>
          <th>Owner</th>
          <th>Tracks Count</th>
        </tr>
      </thead>
      <tbody>
        {{#each playlists}}
        <tr>
          <td>{{this.name}}</td>
          <td>
            {{#if this.images}}
            {{#if this.images.[0]}}
            <img src="{{this.images.[0].url}}" alt="Playlist Image"
              style="width:100px; height: 60px; object-fit: cover;">
            {{else}}
            <img src="../../views/images/default.jpg" alt="Default Image"
              style="width:100px; height: 60px; object-fit: cover;">
            {{/if}}
            {{else}}
            <img src="../../views/images/default.jpg" alt="Default Image"
              style="width:100px; height: 60px; object-fit: cover;">
            {{/if}}
          </td>
          <td>{{this.owner.display_name}}</td>
          <td>{{this.tracks.total}}</td>
          <td>
            <input type="checkbox" class="playlist-checkbox" name="playlist" value="{{this.id}}"
              data-uri="{{this.uri}}">
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
    <div class="submit-btn-container">
      <button type="submit" class="btn-primary">Merge Playlists</button>
    </div>
    <div id="mergeMessage" style="text-align:center; color: green; margin-top: 20px;"></div>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.getElementById('playlistsForm');
      const checkboxes = document.querySelectorAll('.playlist-checkbox');
      const messageDiv = document.getElementById('mergeMessage');

      function updateCheckboxState() {
        const checkedCount = document.querySelectorAll('.playlist-checkbox:checked').length;
        checkboxes.forEach(checkbox => {
          if (checkedCount >= 2) {
            checkbox.disabled = checkbox.checked ? false : true;
          } else {
            checkbox.disabled = false;
          }
        });
      }

      checkboxes.forEach(checkbox =>
        checkbox.addEventListener('change', updateCheckboxState)
      );

      form.addEventListener('submit', function (event) {
        event.preventDefault();
        const selectedPlaylistURIs = [];
        document.querySelectorAll('.playlist-checkbox:checked').forEach(checkbox => {
          const playlistURI = checkbox.getAttribute('data-uri');
          selectedPlaylistURIs.push(playlistURI);
        });
        console.log('Selected Playlist URIs:', selectedPlaylistURIs);
        if (selectedPlaylistURIs.length > 0) {
          fetch('/merge', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ selectedPlaylistURIs })
          })
            .then(response => {
              // Handle the response from the server
              console.log('Response from /home:', response);
            })
            .catch(error => {
              // Handle any errors
              console.error('Error:', error);
            });
        } else {
          messageDiv.textContent = ''; // Clear message if no playlists are selected
        }
      });
    });
  </script>





</body>

</html>